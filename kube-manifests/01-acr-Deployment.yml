apiVersion: apps/v1
kind: Deployment
metadata:
  name: capstone-app-deploy
  labels:
    app: capstone-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capstone-app
  template:
    metadata:
      labels:
        app: capstone-app
    spec:
      containers:
        - name: capstone-app
          image: capstoneacr123.azurecr.io/capstone-container
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: springbootapp
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 2
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: capstone-app-service
#   labels:
#     app: capstone-app
# spec:
#   type: LoadBalancer
#   selector:
#     app: capstone-app
#   ports:
#     - port: 80
#       targetPort: 8080
# ---

apiVersion: networking.k8s.io/v1
kind: Service
metadata:
  name: capstone-app-service
  labels:
    app: capstone-app
spec:
  type: ClusterIP
  selector:
    app: capstone-app
  ports:
    - port: 80
      targetPort: 8080
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: capstone-ingress-service
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /  
spec: 
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: capstone-app-service
            port:
              number: 80
